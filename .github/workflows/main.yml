name: React Kanban Board Test Runner by Codebase Mentor

on:
  workflow_call:
    inputs:
      pr_number:
        description: 'The pull request number'
        required: true
        type: number
      head_sha:
        description: 'The SHA of the PR branch'
        required: true
        type: string
    secrets:
      GH_TOKEN:
        description: 'GitHub token for performing reviews'
        required: true

permissions: write-all

jobs:
  check_is_signed_up:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        status: [200]
    steps:
      - name: Set up environment variables
        env:
          USER_ID: ${{ github.event.sender.id }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "USER_ID=${USER_ID}" >> $GITHUB_ENV
          echo "GH_TOKEN=${GH_TOKEN}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Call API endpoint
        if: ${{ matrix.status == 200 }}
        run: |
          status_code=$(curl -s -o /dev/null -w "%{http_code}" -X POST -d "${USER_ID}" https://jobsim-pr-user-check.deno.dev)
          if [ $status_code -ne 200 ]; then
            gh pr review ${{ inputs.pr_number }} --comment --body "It looks like your GitHub account is not registered with JobSimulator.Dev. Please sign up at https://www.jobsimulator.dev to have your PR be tested automatically. Once you've signed up, close and open your PR to start the tests. Thanks!"
            exit 1
          fi
  test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.31.0-focal
    needs: check_is_signed_up
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.head_sha }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: rm -rf tests
      - uses: actions/checkout@v3
        with:
          repository: developer-job-simulation/react-kanban-board-tests
          path: tests
      - name: Install dependencies
        run: npm ci && cd tests && npm ci
      - name: start frontend
        run: npm run dev:client &
      - name: start backend
        run: npm run dev:server > /logs.txt &
      - name: Run Tests
        run: node tests/test.js
      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: /logs.txt 
